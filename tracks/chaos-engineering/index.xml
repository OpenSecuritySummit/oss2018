<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chaos Engineering on Open Security Summit 2018</title><link>https://2018.open-security-summit.org/tracks/chaos-engineering/</link><description>Recent content in Chaos Engineering on Open Security Summit 2018</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://2018.open-security-summit.org/tracks/chaos-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Steady-State Hypothesis</title><link>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/creating-steady-state-hypothesis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/creating-steady-state-hypothesis/</guid><description>The Chaos Toolkit provides a Universal API for Chaos Engineering experiments that is then used to drive various implementations of chaos-causing and system-state-probing functions.
This session will focus on how the Chaos Toolkit&amp;rsquo;s Open and Universal API for chaos experiments can be practically designed and implemented for DevSecOps concerns.
WHY The chaos engineering steady-state hypothesis is a specification of what &amp;ldquo;normal&amp;rdquo; in a system should look like. Within a set of toleraqnces, the system is observed to detect if it is in what can be considered a recognisable &amp;ldquo;normal&amp;rdquo; state, and therefore ready for a chaos experiment ot be run.</description></item><item><title>Customising the Chaos Toolkit</title><link>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/improving-chaos-toolkit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/improving-chaos-toolkit/</guid><description>The Chaos Toolkit provides a Universal API for Chaos Engineering experiments that is then used to drive various implementations of chaos-causing and system-state-probing functions.
This session will focus on how the Chaos Toolkit, and the project&amp;rsquo;s open source ecosystem, can be practically used and extended for DevSecOps concerns to deliver on the needs of automation and collaboration.
WHY Chaos is about introducing learning loops so that trust and confidence in systems can be maintained in the face of constant change.</description></item><item><title>Hands on Chaos Experiments</title><link>https://2018.open-security-summit.org/tracks/chaos-engineering/user-sessions/hands-on-chaos-experiements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/chaos-engineering/user-sessions/hands-on-chaos-experiements/</guid><description>In this session, attendees will learn how to build chaos experiments from scratch using the free and open source Chaos Toolkit.
WHY Exploring potential security weaknesses in an automated fashion within a system is a strong use case for the new discipline of Chaos Engineering.
Successfully applying the chaos engineering techniques of Game Days and Automated Chaos Experiments is not trivial, and so this session will explain how to understand and work these practices theoretically and in the real world.</description></item><item><title>Real world Chaos Engineering</title><link>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/real-world-chaos-engineering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/chaos-engineering/working-sessions/real-world-chaos-engineering/</guid><description>In this session a collection of real-world security cases will be explored through the lens of the chaos engineering discipline.
WHY In the face of increased speed of system evolution and complexity, systems are becoming harder to trust and have confidence in expecially from a security perspective.
Chaos engineering provides a specific mindset that augments the existing security mindset to provide a basis for automated exploring and discovering of weaknesses before your customers experience them.</description></item></channel></rss>