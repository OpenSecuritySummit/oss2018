<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Owasp Projects on Open Security Summit 2018</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/</link><description>Recent content in Owasp Projects on Open Security Summit 2018</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://2018.open-security-summit.org/tracks/owasp-projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Application Security Verification Standard</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/application-security-verification-standard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/application-security-verification-standard/</guid><description>The OWASP Application Security Verification Standard (ASVS) Project provides a basis for testing web application technical security controls and a list of requirements for secure development for developers.
Why The Application Security Verification Standard is a list of application security requirements or tests that can be used by architects, developers, testers, security professionals, and even consumers to define what a secure application is.
ASVS has two main goals:
to help organizations develop and maintain secure applications to allow security service, security tools vendors, and consumers to align their requirements and offerings What Risk analysis is always subjective and this is why we expect that there will most likely never be a 100% agreement on this standard.</description></item><item><title>Automation of MASVS with BDD</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/automating-masvs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/automating-masvs/</guid><description>The version 1.0 fixed hyphen release of the Mobile Application Security Verification Standard (MASVS) was published earlier this year. The project is getting positive feedback from all over the world and is becoming an accepted industry best practice for mobile apps. The MASVS establishes baseline security requirements for mobile apps that are useful in many scenarios, including:
In the SDLC - to establish security requirements to be followed by solution architects and developers; In mobile app penetration tests - to ensure completeness and consistency in mobile app penetration tests; In procurement - as a measuring stick for mobile app security, e.</description></item><item><title>Creation of Security Buttons</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/security-buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/security-buttons/</guid><description>Why Oftentimes motivating security champions is a challenge. Most of the time, they&amp;rsquo;re not willing to dedicate the time and effort to the invisible part of security. The product owners themselves focus on pushing the developement of features therefore the nessecity of security is often neglected or almost completely overlooked.
That is why there is a need to visualize the investment in security, made by a champion or an entire team.</description></item><item><title>Juice Shop Brainstorming</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/juice-shop-brainstorming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/juice-shop-brainstorming/</guid><description>Why OWASP Juice Shop Project is an intentionally insecure webapp for security training written entirely in JavaScript and which encompasses the entire OWASP Top Ten and other severe security flaws. Juice Shop is written in Node.js, Express, and AngularJS. The application contains more than 30 challenges of varying difficulty where the user should exploit the underlying vulnerabilities. Apart from being useful for hacker and awareness training, pentesting proxies or security scanners can also use Juice Shop as a &amp;ldquo;guinea pig&amp;rdquo; application to check how well their tools cope with JavaScript-heavy application frontends and REST APIs.</description></item><item><title>Juice Shop Coding Day</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/juice-shop-coding-day/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/juice-shop-coding-day/</guid><description>Why OWASP Juice Shop Project is an intentionally insecure webapp for security training written entirely in JavaScript and which encompasses the entire OWASP Top Ten and other severe security flaws. Juice Shop is written in Node.js, Express, and AngularJS. The application contains more than 30 challenges of varying difficulty where the user should exploit the underlying vulnerabilities. Apart from being useful for hacker and awareness training, pentesting proxies or security scanners can also use Juice Shop as a &amp;ldquo;guinea pig&amp;rdquo; application to check how well their tools cope with JavaScript-heavy application frontends and REST APIs.</description></item><item><title>Owasp Testing Guide v5</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/owasp-testing-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/owasp-testing-guide/</guid><description>OWASP Testing Guide provides a “low level” Penetration Testing guide describing tools &amp;amp; techniques used for testing the most common application security vulnerabilities. The Guide has become a de facto standard to perform Web Application Penetration Testing.
When Starting the new OWASP Testing Guide Thu, Jun 7, 2018 2:00 PM - 3:00 PM London Time
Please join the meeting from your computer, tablet or smartphone. https://global.gotomeeting.com/join/898796925 First GoToMeeting? Let&amp;rsquo;s do a quick system check: https://link.</description></item><item><title>Owasp Top 5 Machine Learning risks</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/owasp-top-5-machine-learning-risks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/owasp-top-5-machine-learning-risks/</guid><description>Why Deep Learning and Machine Learning become vital part of critical systems like self-driving cars, advanced authentication and automated detection of lesions/tumors. However, research shows that such technologies have inherent risks originated from the process of how the models are being learnt or used. In this session we will learn about OWASP project (Top 5 Machine Learning Risks) which tries to identify and document these risks in general, and then we will discuss one case study about specific risk and how to address it.</description></item><item><title>Reboot Owasp Books Project</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/reboot-owasp-books-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/reboot-owasp-books-project/</guid><description/></item><item><title>Running CTF Games with OWASP Juice Shop</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/user-sessions/running-ctfs-with-juice-shop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/user-sessions/running-ctfs-with-juice-shop/</guid><description>Juice Shop has been supporting CTF games via its official CTF-extension for just over a year. This user session provides an overview on different possibilities including some brand new ones.
WHY CTF Games are a great way to learn and teach about AppSec. But running / hosting them can be a challenge.
What This User Session gives an overview about different possibilities to run Juice Shop based CTF Games with different CTF Platforms (CTFd and FBCTF).</description></item><item><title>Testing iOS Apps without Jailbreak</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/ios-testing-without-jailbreak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/ios-testing-without-jailbreak/</guid><description>This user session is based on the chapter &amp;ldquo;Dynamic analysis on non-jailbroken devices&amp;rdquo; from the MSTG, see also https://github.com/OWASP/owasp-mstg/blob/5add048ae91813151c09b6ad18a5f7e63e5290d6/Document/0x06b-Basic-Security-Testing.md#dynamic-analysis-on-non-jailbroken-devices
Please install the pre-requisites: https://github.com/sensepost/objection/wiki/Patching-iOS-Applications
A MacBook with Xcode is needed!
Outcomes Every participant should have a working setup to test iOS apps without jailbreak.
Who The target audience for this Working Session is:
iOS Developers Penetration Testers Everyone else who is interested in mobile security and some technical know-how :-)</description></item><item><title>Update MSTG with changes in Android 8 (Oreo)</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/mstg-update-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/mstg-update-android/</guid><description>The Mobile Security Testing Guide (MSTG) is a comprehensive manual for mobile app security testing and reverse engineering. It describes technical processes for verifying the controls listed in the OWASP Mobile Application Verification Standard (MASVS).
Why With every (major) release of Android security controls are added/changed or may become obsolete. This session is to identify these changes in Android 8 and to update the MSTG along the way.
Outcomes An updated Android chapter in the MSTG that covers the latest changes of security controls in Android 8.</description></item><item><title>Update MSTG with changes in iOS 11</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/mstg-update-ios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/working-sessions/mstg-update-ios/</guid><description>The Mobile Security Testing Guide (MSTG) is a comprehensive manual for mobile app security testing and reverse engineering. It describes technical processes for verifying the controls listed in the OWASP Mobile Application Verification Standard (MASVS).
Why With every (major) release of iOS security controls are added/changed or may become obsolete. This session is to identify these changes in iOS 11 and to update the MSTG along the way.
Outcomes An updated iOS chapter in the MSTG that covers the latest changes of security controls in iOS 11.</description></item><item><title>Zap - How to use it</title><link>https://2018.open-security-summit.org/tracks/owasp-projects/user-sessions/zap-how-to-use-it/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://2018.open-security-summit.org/tracks/owasp-projects/user-sessions/zap-how-to-use-it/</guid><description/></item></channel></rss>